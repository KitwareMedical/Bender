<?xml version="1.0" encoding="utf-8"?>
<executable>
  <category>;Segmentation.Bender</category>
  <index>2</index>
  <title>Volume Skinning</title>
  <description><![CDATA[This modules create a labelmap for which each voxel as a label that associates it to the <b>Input Armature</b>. <p>To compute the <b>Output Skinned Volume<b>, first the <b>Input Volume</b> voxels that align with the <b>Input Armature</b>'s bones are assigned their skinning value. Then using voroinoi, the rest of the image is classified.</p>]]>
  </description>
  <version>1.0.0</version>
  <documentation-url>http://public.kitware.com/Wiki/Bender/Documentation/1.0/Modules/VolumeSkinning</documentation-url>
  <license/>
  <contributor>Yuanxin Liu (Kitware)</contributor>
  <contributor>Julien Finet (Kitware)</contributor>
  <contributor>Johan Andruejol (Kitware)</contributor>
  <acknowledgements><![CDATA[Air Force Research Laboratories]]></acknowledgements>
  <parameters>
    <label>IO</label>
    <description><![CDATA[Input/output parameters]]></description>

    <image>
      <name>RestVolume</name>
      <label>Input Volume</label>
      <description><![CDATA[Resting volume. Each voxel of the <b>Input Volume</b> will be associated with a bone of the <b>Input Armature</b>.]]></description>
      <channel>input</channel>
      <index>0</index>
    </image>

    <geometry fileExtensions=".vtk">
      <name>ArmaturePoly</name>
      <label>Input Armature</label>
      <description><![CDATA[Armature in rest mode. This is the armature that should have been created for the <b>Input Volume</b> and completely lies whithin it.]]></description>
      <channel>input</channel>
      <index>1</index>
    </geometry>

    <image type="label">
      <name>SkinnedVolume</name>
      <label>Output Skinned Volume</label>
      <description><![CDATA[Labelmap of the volume segmented by region according to the <b>Input Armature</b>. For a given bone i, the associated region will have the label = i + 2.]]></description>
      <channel>output</channel>
      <index>2</index>
    </image>

  </parameters>

  <parameters>
    <label>Controls</label>
    <description><![CDATA[Control how the module operates]]></description>

    <double>
      <name>BackgroundValue</name>
      <label>Background Value</label>
      <description><![CDATA[The voxel value considered as background. All the other voxel values will be treated as foreground.]]></description>
      <longflag>--backgroundValue</longflag>
      <default>0.</default>
    </double>

  </parameters>

  <parameters advanced="true">
    <label>Advanced</label>
    <description><![CDATA[Advanced properties]]></description>

    <boolean>
      <name>Debug</name>
      <label>Debug Mode</label>
      <longflag>--debug</longflag>
      <description><![CDATA[Print debug logs and dump intermediate images.]]></description>
      <default>false</default>
    </boolean>

    <boolean>
      <name>IsArmatureInRAS</name>
      <label>Armature in RAS</label>
      <description><![CDATA[Whether input armature is already in the RAS(Right, Anterior, Superior) coordinate system (true) or in LPS (Left, Posterior, Superior) coordinate system (false, default). If not, it will be internally transformed into RAS.]]></description>
      <longflag>--armatureInRAS</longflag>
      <default>false</default>
    </boolean>

    <boolean>
      <name>IgnoreErrors</name>
      <label>Ignore Errors</label>
      <longflag>--ignoreErrors</longflag>
      <description><![CDATA[Exit successfully even if errors are generated.]]></description>
      <default>false</default>
    </boolean>

  </parameters>
</executable>
